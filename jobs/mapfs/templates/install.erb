#!/bin/bash
<% if p("disable") %>
<% else %>
set -eo pipefail

function prepend_rfc3339_datetime() {
  perl -ne 'BEGIN { use Time::HiRes "time"; use POSIX "strftime"; STDOUT->autoflush(1) }; my $t = time; my $fsec = sprintf ".%09d", ($t-int($t))*1000000000; my $time = strftime("[%Y-%m-%dT%H:%M:%S".$fsec."Z]", localtime $t); print("$time $_")'
}

function main() {
  # [[ -f .../ ]] does resolve links.
  # e.g.
  # ln -s /test/non-existing-target symlink-to-nonexisting
  # [[ -f ./symlink-to-nonexisting ]] => 1
  # touch /test/existing-target
  # ln -s /test/existing-target symlink-to-existing
  # [[ -f ./symlink-to-existing ]] => 0

  # /var/vcap/packages/mapfs-fuse itself is a symlink
  # e.g:
  # /var/vcap/packages/mapfs-fuse -> /var/vcap/data/packages/mapfs-fuse/7b0feec064cdabced95809f129c7ba1495afeede
  # We will need to always overwrite the symlinks, because in a scenario where this release gets updated but the 
  # VM stays the same, we need to relink because the target of `/var/vcap/packages/mapfs-fuse` changed.

  if [[ ! -f /sbin/mount.fuse3 ]]; then
    echo "symlinking fuse mounthelper binary to /sbin"
    ln -fs "$( readlink -f /var/vcap/packages/mapfs-fuse/sbin/mount.fuse3 )" /sbin/mount.fuse3
  fi
  if [[ ! -f /bin/fusermount ]]; then
    echo "symlinking fusermount3 to /bin/fusermount"
    ln -fs "$( readlink -f /var/vcap/packages/mapfs-fuse/bin/fusermount3 )" /bin/fusermount
  fi
 
  for FULL_PATH in $( find /var/vcap/packages/mapfs-fuse/lib/x86_64-linux-gnu/ -name  "*.so*" ); do 
    TARGET_PATH="$( readlink -f $FULL_PATH )"
    LINK_NAME="$( basename $FULL_PATH )"
    ln -sf "$TARGET_PATH" "/lib/$LINK_NAME"
  done

  modprobe fuse || true
  groupadd fuse || true
  adduser vcap fuse
  chown root:fuse /dev/fuse
cat << EOF > /etc/fuse.conf
user_allow_other
EOF
  chmod 644 /etc/fuse.conf

  echo "Installing mapfs"

  chown root:vcap /var/vcap/packages/mapfs/bin/mapfs
  chmod 750 /var/vcap/packages/mapfs/bin/mapfs
  chmod u+s /var/vcap/packages/mapfs/bin/mapfs
}

main | prepend_rfc3339_datetime
<% end %>
